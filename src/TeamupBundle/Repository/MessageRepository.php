<?php

namespace TeamupBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{
	public function chatMessages($user, $currentUser)
	{
		$query = $this->getEntityManager()
            ->createQuery(
                'SELECT m FROM TeamupBundle:Message m
                JOIN m.reciever r
                JOIN m.sender s
                WHERE ( r.id = :currentUserId AND s.id = :userId ) OR ( r.id = :userId AND s.id = :currentUserId )
                ORDER BY m.sendedTimestamp
                '
            )->setParameters(array('currentUserId' => $currentUser->getId(), 'userId' => $user->getId()));
     
        try 
        {
            return $query->getResult();
        } 
        catch (\Doctrine\ORM\NoResultException $e) 
        {
            return null;
        }
	}

    public function findLatest($message, $user, $currentUser)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT m FROM TeamupBundle:Message m
                JOIN m.reciever r
                JOIN m.sender s
                WHERE ( ( r.id = :currentUserId AND s.id = :userId ) OR ( r.id = :userId AND s.id = :currentUserId ) ) AND m.id > :lastId
                ORDER BY m.sendedTimestamp
                '
            )->setParameters(array( 'currentUserId' => $currentUser->getId(), 'userId' => $user->getId(), 'lastId' => $message->getId() ));
     
        try 
        {
            return $query->getResult();
        } 
        catch (\Doctrine\ORM\NoResultException $e) 
        {
            return null;
        }
    }
}
